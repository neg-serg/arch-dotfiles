from enum import Enum, auto
import inspect
from negwm.lib.keymap import keymap, bindmap

Œî, Œª = bindmap, keymap
e = enumerate

Exec = 'exec --no-startup-id'
Font = 'Iosevka Bold 12'
M1, M4, Sh, Ct = 'Mod1', 'Mod4', 'Shift', 'Control'
NegwmRestart = 'exec --no-startup-id systemctl --user restart negwm'

class IconsType(Enum):
    greek = auto()
    runes = auto()
    gothic = auto()

def plain(): return inspect.cleandoc(f'''
    floating_modifier {M4}
    focus_follows_mouse no
    font pango: {Font}
    hide_edge_borders both

    set  $bg     #000000ee
    set  $fg     #899CA1
    set  $fb     #005faf
    set  $ib     #285981
    set  $ub     #2E2457
    set  $blue   #285981
    set  $actbr  #020204

    client.focused           $fb  $bg  $fg    $bg  $actbr
    client.focused_inactive  $ib  $bg  $fg    $bg  $bg
    client.placeholder       $bg  $bg  $fg    $bg  $bg
    client.unfocused         $bg  $bg  $blue  $bg  $bg
    client.urgent            $bg  $ub  $fg    $ub  $ib

    client.background        $bg
    '''
)

def start_apps(always=False):
    if always:
        return (
            'dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK',
            'systemctl --user start --no-block i3-session.target'
        )
    else:
        return ('systemctl --user restart --no-block negwm',)

def rules(): return inspect.cleandoc(f'''
    for_window [class=".*"] title_format "<span foreground=\'#395573\'> >_ </span> %title", border pixel 2

    for_window [class="(?i)(alacr|k)itty"] border none
    for_window [class="(?i)\\.exe"] floating enable, border none, move position center
    for_window [class="^(inkscape|gimp)$"] move workspace $draw
    for_window [class="(?i)(?:qt5ct|gcolor3|rdesktop|openssh-askpass|lutris|steam_app_.*|wine)"] floating enable
    for_window [instance="^(gpartedbin|recoll)$"] move workspace $sys, floating enable, focus
    for_window [title="(?i)(?:File Transfer.*)"] floating enable
    for_window [window_role="browser"] border none
    for_window [window_role="^(pop-up|task_dialog)$"] floating enable

    no_focus [window_type="splash"]
    '''
)

def workspaces(use=IconsType.gothic):
    if use == IconsType.greek:
        return [
            'Óà∂Ô∏Å Œ±:term',  'Ôâ© Œ≤:web',   'Óâß Œ¥:dev',
            'ÔÖú Œ≥:doc',   'ÔÄæ Œ∂:draw',  'ﬂ∑ Œ∏:gfx',
            '‚úΩ œÅ:obs',   'ÔÄæ Œæ:pic',   'ÔÜ∑ Œπ:steam',
            'ÔÇ≠ Œ∑:sys',   'Ôáç Œª:vm',    'Ôáã Œº:wine'
        ]
    if use == IconsType.runes:
        return [
            'Óà∂Ô∏Å ·ö†:term',  'Ôâ© ·ö¢:web',   'Óâß ·ö¶:dev',
            'ÔÖú ·ö®:doc',   'ÔÄæ ·ö±:draw',  'ﬂ∑ ·ö≤:gfx',
            '‚úΩ ·ö∑:obs',   'ÔÄæ ·öπ:pic',   'ÔÜ∑ ·ö∫:steam',
            'ÔÇ≠ ·öæ:sys',   'Ôáç ·õÅ:vm',    'Ôáã ·õÉ:wine'
        ]
    if use == IconsType.gothic:
        return [
            'Óà∂Ô∏Å êå∞:term',  'Ôâ© êå±:web',   'Óâß êå≤:dev',
            'ÔÖú êå≥:doc',   'ÔÄæ êå¥:draw',  'ﬂ∑ êåµ:gfx',
            '‚úΩ êå∂:obs',   'ÔÄæ êå∑:pic',   'ÔÜ∑ êå∏:steam',
            'ÔÇ≠ êåπ:sys',   'Ôáç êå∫:vm',    'Ôáã êåª:wine'
        ]

def mode_default(): return Œî([
    Œª({
        f'{M4}+4': '~/bin/screenshot',
        f'{M4}+{Ct}+4': '~/bin/screenshot -r',
        f'{M4}+{Sh}+4': '/usr/bin/flameshot gui',
    }, fmt='exec {cmd}'),
    Œª({
        f'{M1}+grave': '/usr/bin/rofi -show run -show-icons -disable-history -theme neg || rofi -show run || dmenu_run',
        f'{M4}+8': '~/bin/pl vol mute',
        f'{M4}+c': '~/bin/clip',
        f'{M4}+m': '/bin/zsh -c "~/bin/music-rename current"',
        f'{M4}+p': '~/bin/rofi-tmux-urls',
        f'{M4}+{Sh}+8': '~/bin/pl vol unmute',
        f'{M4}+{Sh}+9': '/usr/bin/dunstctl history-pop',
        f'{M4}+{Sh}+l': '~/bin/rofi-lutris',
        f'{M4}+{Sh}+m': '~/bin/main-menu',
        f'{M4}+{Sh}+p': '/bin/zsh -c /usr/bin/rofi-pass',
        f'{M4}+{Sh}+y': '~/bin/clip youtube-dw-list',
        f'{M4}+space': '/usr/bin/dunstctl close-all',
        f'{M4}+Return': '/usr/bin/i3-sensible-terminal',
        'XF86Sleep': '/usr/bin/systemctl suspend',
    }, fmt=f'{Exec} {{cmd}}'),
    Œª(
        {f'{M4}+{key}': ['left','down','up','right'][n] for n,key in e('hjkl')} |
        {f'{M4}+{key}': ['parent','child'][n] for n,key in e('27')
    }, fmt='focus {cmd}'),
    # move workspace to left and right monitors
    Œª({
        f'{M4}+{Sh}+bracketleft': 'left',
        f'{M4}+{Sh}+bracketright': 'right',
    }, fmt='move workspace to output {cmd}'),
    Œª({
        f'{M4}+apostrophe': f'reload; {NegwmRestart}',
        f'{M4}+backslash': f'reload; {NegwmRestart}; {Exec} polybar-msg cmd restart',
        f'{M4}+{Sh}+apostrophe': 'restart'
    }),
    Œª({
        f'{M4}+grave': 'focus_next_visible',
        f'{M4}+{Sh}+grave': 'focus_prev_visible',
        f'{M1}+Tab': 'switch',
        f'{M4}+slash': 'switch',
    }, fmt='$remember_focused {cmd}'),
    Œª({
        f'{M4}+{Ct}+a': 'dialog',
        f'{M4}+{Ct}+s': 'geom_dump',
        f'{M4}+{Ct}+space': 'geom_restore',
        f'{M4}+s': 'hide_current',
        f'{M4}+3': 'next',
    }, fmt='$scratchpad {cmd}'),
    Œª({
        f'{M4}+period': 'cmd next',
        f'{M4}+{Sh}+2': 'cmd play-pause',
        f'{M4}+comma': 'cmd previous',
        'XF86AudioLowerVolume': 'vol down',
        'XF86AudioRaiseVolume': 'vol up',
    }, fmt=f'{Exec} ~/bin/pl {{cmd}}'),
    Œª({key: ['next','play','previous','stop'][n]
       for n,key in e(['XF86AudioNext','XF86AudioPlay','XF86AudioPrev','XF86AudioStop'])}
    , fmt=f'{Exec} ~/bin/pl cmd {{cmd}}'),
    Œª({
        f'{M4}+{Sh}+a': 'attach',
        f'{M4}+{Sh}+s': 'move_window',
        f'{M4}+{Ct}+grave': 'i3_menu',
        f'{M1}+g': 'goto_win',
        f'{M4}+{Ct}+g': 'movews',
        f'{M1}+{Ct}+g': 'ws',
    }, fmt='$menu {cmd}'),
    Œª({
        f'{M4}+{Ct}+q': 'kill',
        f'{M4}+5': '[floating] floating disable, unmark "^_all_$"',
        f'{M4}+{Sh}+g': 'mark --replace _all_, move scratchpad',
        f'{M4}+g': '[con_mark="^_all_$"] scratchpad show',
        f'{M4}+q': 'fullscreen toggle',
        f'{M4}+y': 'sticky toggle',
    }),
])

def mode_wallpaper(): return Œî([
    Œª({
        '6': '~/bin/wl',
        f'{M4}+{Sh}+6': '~/bin/wl',
        f'{Sh}+6': '~/bin/wl',
        'm': '~/bin/wl-convert mono',
        'n': '~/bin/wl-convert normal',
        'r': '~/bin/wl-convert retro',
    }, fmt=f'{Exec} {{cmd}}'),
    Œª({'': ['Space','q']}, exit=True),
    ], bind=f'{M4}+{Sh}+6', name='%{T4}ÔÄæ'
)

def mode_resize(): return Œî([
    Œª({
        'bottom': ['j','s'],
        'left': ['h','a'],
        'right': ['l','d'],
        'top': ['k','w'],
    }, fmt='$actions resize {cmd} 4'),
    Œª({
        'bottom': [f'{Sh}+j',f'{Sh}+s'],
        'left': [f'{Sh}+h',f'{Sh}+a'],
        'right': [f'{Sh}+l',f'{Sh}+d'],
        'top': [f'{Sh}+k',f'{Sh}+w'],
    }, fmt='$actions resize {cmd} -4'),
    ], bind=f'{M4}+r', name='%{T4}Ôê§%{T-}'
 )

def mode_spec(): return Œî([
    Œª({
        'e': '[urgent=latest] focus',
        'l': 'exec ~/bin/x11lock',
        f'{Sh}+d': 'floating toggle',
    }, exit=True),
    Œª({
        f'{Sh}+t': 'gtk_theme',
        f'{Sh}+i': 'icon_theme',
        'i': 'pulse_input',
        'o': 'pulse_output',
        'm': 'xprop_show',
    }, fmt='$menu {cmd}', exit=True),
    ], bind=f'{M1}+e', name='%{T4}ÔÜ≤%{T-}'
)

def mode_wm(): return Œî([
    Œª({
        'grave': 'default',
        'minus': 'splith',
        'backslash': 'splitv',
        't': 'tabbed',
    }, fmt='layout {cmd}', exit=True),
    Œª({f'Tab': 'toggle'}, fmt='layout {cmd}', exit=False),
    Œª({
        'horizontal': [f'{Sh}+h',f'{Sh}+l'],
        'vertical': [f'{Sh}+j',f'{Sh}+k'],
    }, fmt='split', exit=True),
    Œª({act: ['up','left','down','right'][n] for n,act in e('wasd')}, fmt='move {cmd}'),
    Œª({f'{Sh}+{key}': ['hdown','hup','vleft','vright'][n] for n,key in e('wasd')} , fmt='$actions {cmd} x2'),
    Œª({
        f'{Sh}+plus': 'grow',
        'x': 'maxhor',
        'm': 'maximize',
        'y': 'maxvert',
        'c': 'none',
        f'{Sh}+c': 'resize',
        'revert_maximize': [f'{Sh}+m',f'{Sh}+x',f'{Sh}+y'],
        'shrink': [f'{Sh}+minus'],
    }, fmt='$actions'),
    ], bind=f'{M4}+minus', name='%{T4}ÔÄâ%{T-}',
)

class conf_gen(Enum):
    plain=plain()
    exec=start_apps()
    exec_always=start_apps(always=True)
    rules=rules()
    workspaces=workspaces()
    mode_default=mode_default()
    mode_resize=mode_resize()
    mode_spec=mode_spec()
    mode_wm=mode_wm()
    mode_wallpaper=mode_wallpaper()

# vim:filetype=python
