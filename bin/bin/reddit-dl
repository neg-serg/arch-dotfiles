#!/usr/bin/bash
# Script for downloading reddit videos.
# Dependencies: coreutils, wget, ffmpeg, jq, yq
# Usage: reddit-dl <URL> [OUTPUT_DIR]

url="$1"
output_dir="$2"
temp_name="$(printf "$url" | md5sum | awk '{print $1}')"
temp_path="/tmp/reddit-dl/$temp_name"

function usage() {
    echo "Usage: reddit-dl <URL> [OUTPUT_DIR]"
}

function is_url() {
    echo "$1" | grep -q '^http'
}

function err() {
    echo "$1" > /dev/stderr
    exit 1
}

if [ -z "$url" ]; then
    echo "No URL was supplied!"
    usage
    exit 1
fi
url="$(echo $url | sed 's/www.reddit/old.reddit/')"

if [ -z "$output_dir" ]; then
    output_dir="$HOME/Videos/reddit-dl"
    mkdir -p "$HOME/Videos/reddit-dl"
fi
if [ ! -d "$output_dir" ]; then
    echo "'$output_dir' does not exist or is not a directory!"
    usage
    exit 1
fi
output_dir="$(realpath -m "$output_dir")"
output_path="$output_dir/$temp_name.mp4"
output_relpath="$(realpath -m --relative-to=. "$output_path")"

if [ -e "$output_path" ]; then
    err "Target '$output_path' already exists!"
fi

rm -rf "$temp_path"
mkdir -p "$temp_path"
cd "$temp_path"

echo " • Downloading page..."
wget -nv -O "index.html" "$url"
[ $? -ne 0 ] && err "Download failed!"

echo " • Parsing page..."
video_url=$(
    sed -n -E "s/.*<script [^>]*?id=.config.[^>]*>r.setup\(([^<]*?)\)<\/script>.*/\1/p" index.html \
        | jq -r ".event_target.target_url"
)

echo " • Downloading metadata..."
wget -nv "$video_url/DASHPlaylist.mpd"
[ $? -ne 0 ] && err "Download failed!"

cat DASHPlaylist.mpd | xq "." > data.json
if ! jq -r '.MPD.Period.AdaptationSet[1].Representation."@mimeType"' data.json 2> /dev/null \
        | grep -q '^audio'; then
    audio_data="$(jq ".MPD.Period.AdaptationSet[0].Representation" data.json)"
    video_list_data="$(jq ".MPD.Period.AdaptationSet[1].Representation" data.json)"
else
    audio_data="$(jq ".MPD.Period.AdaptationSet[1].Representation" data.json)"
    video_list_data="$(jq ".MPD.Period.AdaptationSet[0].Representation" data.json)"
fi
video_data=""

max=0
for ((i=0; i<$(echo "$video_list_data" | jq ". | length"); i++)); do
    cur="$(echo "$video_list_data" | jq ".[$i]")"
    cur_height=$(echo "$cur" | jq -r '."@height"')
    if [ $cur_height -gt $max ]; then
        max=$cur_height
        video_data="$cur"
    fi
done

echo " • Downloading audio..."
u="$(echo $audio_data"" | jq -r '.BaseURL')"
if ! is_url "$u"; then
    u="$video_url/$u"
fi
wget -nv "$u" -O audio.mp3
[ $? -ne 0 ] && err "Download failed!"

echo " • Downloading video..."
u="$(echo "$video_data" | jq -r '.BaseURL')"
if ! is_url "$u"; then
    u="$video_url/$u"
fi
wget -nv "$u" -O video.mp4
[ $? -ne 0 ] && err "Download failed!"

echo " • Merging media..."
ffmpeg -loglevel 16 -i video.mp4 -i audio.mp3 -c:v copy -c:a aac "$output_path"

[ $? -eq 0 ] && echo " ✅ Created '$output_relpath' successfully!"
