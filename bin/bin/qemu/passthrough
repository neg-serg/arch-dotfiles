#!/bin/zsh

reset_usb3() {
    # this script resets all USB3 devices, seems to be necessary sometimes after
    # stopping a VM

    for i in $(ls /sys/bus/pci/drivers/xhci_hcd/|grep :); do
        echo $i >/sys/bus/pci/drivers/xhci_hcd/unbind
        sleep 0.2
        echo $i >/sys/bus/pci/drivers/xhci_hcd/bind
    done
}

handle_all_devices() {
    USB_DEVICES+=(
        "046d:c083" 
        "046d:c32b"
        "05ac:12a8"
        "05ac:1392"
        "0763:3108"
        "1532:0227"
    )

    # G403 Prodigy Gaming Mouse 
    # Logitech G910 [Keyboard]  
    # Apple, Inc. iPhone5/5C/5S/6/7

    # 1038:1702 # SteelSeries ApS [ Mouse ]
    # 046d:c32b # Logitech G910 [Keyboard]
    # 1e7d:2e22 # Roccat kone rtd [ Mouse ]
    # 1038:1702 # SteelSeries ApS [ Mouse ]
}

prepare() {
    trap "exit 1" TERM
    export TOP_PID=$$

    USB_DEVICES=()

    netcat_port=4444
    netcat_host=localhost
    sec_wait=3

    if [[ -z "${2}" ]]; then
        handle_all_devices
    else
        USB_DEVICES+=("${2}")
    fi
}

main() {
    # loop over given search strings
    for i in "${USB_DEVICES[@]}"; do
        # loop over results of search string
        (lsusb | grep -i "${i}") | while read line; do
            bus=$(echo "${line}" | cut -d" " -f2 | sed 's/^0*//')
            device=$(echo "${line}" | cut -d" " -f4 | sed 's/://' | sed 's/^0*//')
            vendor=$(echo "${line}" | cut -d" " -f6 | cut -d: -f1)
            product=$(echo "${line}" | cut -d" " -f6 | cut -d: -f2)
            guestbus="xhci.0"

            if hash jq 2> /dev/null; then
                bpasscmd() {
                    for i in "$@";
                        echo "${i}" | nc -q "${sec_wait}" "${netcat_host}" "${netcat_port}" | jq -c
                }
            else
                bpasscmd() {
                    for i in "$@";
                        echo "${i}" | nc -q "${sec_wait}" "${netcat_host}" "${netcat_port}"
                }
            fi

            if [[ ${1} == "add" ]]; then
                echo "Passing through (USB):"
                echo "${line}"
                cmd=(
                    '{ "execute": "qmp_capabilities" }'
                    '{ "execute": "device_add", "arguments": { "driver": "usb-host", "hostbus": "'${bus}'", "hostaddr": "'${device}'", "id": "'"usb_${vendor}.${product}.${bus}.${device}"'", "bus": "'${guestbus}'" }}'
                )
                bpasscmd "${cmd}"
            elif [[ ${1} == "del" ]]; then
                echo "Undoing passthrough (USB):"
                echo ${line}
                cmd=(
                    "{ \"execute\": \"qmp_capabilities\" }"
                    "{ \"execute\": \"device_del\", \"arguments\": { \"id\": \"usb_${vendor}.${product}.${bus}.${device}\" }}"
                )
                bpasscmd "${cmd}"
                sleep 0.5
            else
                echo "Unknown command $1! Use either add or del as first argument."
                kill -s TERM ${TOP_PID}
            fi
        done
    done
}

prepare "$@"
main "$@"

source "$(readlink -f ${XDG_CONFIG_HOME}/xinit/xinput.zsh)"
