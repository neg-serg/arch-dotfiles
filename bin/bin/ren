#!/usr/bin/env python3

""" Script to rename files to my own pretty naming format.
Usage:
    ./ren FILES ...
    ./ren -i FILES ...

Options:
    FILES   input file list
    -i      change file name, not print only.

Created by :: Neg
email :: <serg.zorg@gmail.com>
year :: 2021
"""

import os
import re
from docopt import docopt
import pretty_printer

def fancy_name(filename, file=False):
    """ Some magic to return beautiful filename """

    filename = re.sub(r'[ _\t\.]+', "·", filename)
    filename = re.sub(r'·*-·*', '-', filename)
    filename = re.sub(r'\,[_-]', '-', filename)
    filename = re.sub(r'[+·\.]*-[+·\.]*', '-', filename)
    filename = re.sub(r'[+·\.]*:[+·\.]*', ':', filename)

    # filename = re.sub(r'[><\\\]+', "", filename)
    filename = re.sub(r'\(+', "[", filename)
    filename = re.sub(r'\)+', "]", filename)
    filename = re.sub(r'[\'\`]', "=", filename)
    filename = re.sub(r'^[-.()+·\.]+', "", filename)
    filename = re.sub(r'[-.()+·\.]+$', "", filename)

    if file:
        return '.'.join(filename.rsplit('·', 1))

    return filename

def main():
    """ Pretty-printing autorenamer """
    cmd_args = docopt(__doc__, version='1.0')

    files =  cmd_args['FILES']
    file_rename = cmd_args['-i']
    for fname in files:
        if not os.path.exists(fname):
            break
        dir_name = os.path.dirname(fname)
        input_name = os.path.basename(fname)

        if os.path.isdir(fname):
            output_name = fancy_name(input_name)
        else:
            output_name = fancy_name(input_name, file=True)

        if file_rename:
            pref = ''
            if dir_name:
                pref = dir_name + '/'
            os.rename(pref + input_name, pref + output_name)
        pp = pretty_printer.PrettyPrinter
        print(f'{pp.prefix()}{pp.fancy_file(dir_name)}'
            f'{pp.fancy_file(input_name)} -> {pp.fancy_file(output_name)}'
        )

main()
