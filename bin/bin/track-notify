#!/usr/bin/env zsh
magic_pie='9174'
mpd_music_dir="$(awk '/music_directory/{print $2}' ${XDG_CONFIG_HOME}/mpd/mpd.conf|tr -d '"'|sed 's:^~:'${HOME}':')"
track_path="$(mpc --format "$mpd_music_dir"/%file% | head -n 1)"
art_="$1"
E='</span>'
if [[ $art_ != "" ]]; then
    art="$art_"
else
    exit 1
fi

nr(){ print "<span weight='Bold' color='#b8c5d9'>$1</span>" }
fa(){ print "<span color=\'$1\' font-family='Font Awesome 6 Pro'>" }
prefix=(
    ''                        # track name    [1]
    "$(fa '#004E4E')   $E" # artist        [2]
    "$(fa '#004E4E')   $E" # album         [3]
    "$(fa '#004E4E')   $E" # label         [4]
    "$(fa '#004E4E')   $E" # audio_quality [5]
    "$(fa '#004E4E')   $E" # genre         [6]
    "$(fa '#004E4E')   $E" # quality       [7]
    "$(fa '#004E4E')   $E" # year          [8]
)

notify() {
    info=()
    track_metadata="$(sox --i "$track_path" 2> /dev/null)"
    ret=$?
    if (( ret>0 )); then print "sox not working with code $ret"; exit 1; fi
    info[1]=""
    info[2]="$(awk -F '=' 'BEGIN{IGNORECASE=1}/^artist=/{print $2}' <<< $track_metadata)"
    info[3]="$(awk -F '=' 'BEGIN{IGNORECASE=1}/^album=/{print $2}' <<< $track_metadata)"
    info[4]="$(awk -F '=' 'BEGIN{IGNORECASE=1}/^label=/{print $2}' <<< $track_metadata)"
    info[5]="$(awk -F '=' 'BEGIN{IGNORECASE=1}/^year=/{print $2}' <<< $track_metadata)"
    if [[ -z $info[5] ]]; then
        info[5]="$(awk -F '=' 'BEGIN{IGNORECASE=1}/^date=/{print $2}' <<< $track_metadata)"
    fi
    info[6]="$(xargs <<< $(awk -F '=' 'BEGIN{IGNORECASE=1}/^genre=/{print $2}' <<< $track_metadata))"

    for i in {2..6}; do
        if [[ ! -z "${info[i]}" ]]; then
            info[i]="$prefix[i]$(nr ${info[i]})\n"
        else
            info[i]="\n"
        fi
    done
    audio_quality="$(awk -F '\\s*:\\s*' \
        'BEGIN {} /^Channels/{ch=$2} \
        /^Sample Encoding/{se=$2} \
        /^Bit Rate/{br=$2} \
        /^Sample Rate/{sr=$2/1000} \
        /^Precision/{pr=$2} \
    END { \
    if (se ~ /FLAC/) printf "FLAC·"; \
    if (se ~ /MPEG/) printf "mpeg·"; \
    if (se ~ /Direct Stream Digital/) printf "dsd·"; \
        print br"·"sr"K/"pr"·"ch}' <<< ${track_metadata})"
    [[ ${audio_quality// } != "·K/·" ]] && info[7]="${prefix[7]}$(nr $audio_quality)\n" || info[7]="\n"

    for i in ${info[@]};
        [[ ${i} != "\n" ]] && output="${output}${i}"
    output="\n${output}\n​"

    dunstify -p -a "mpd" -h "string:fgcolor:#17272D" \
        -u "normal" \
        -i "$art" "" "$output" > /tmp/notify_id \
        -r "$magic_pie" -t 4000
}

[[ -e /tmp/notify_id ]] && dunstify -C "$(< /tmp/notify_id)" -r ${magic_pie}
notify
