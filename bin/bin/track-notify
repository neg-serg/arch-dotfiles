#!/usr/bin/env zsh

pics="$(realpath ${HOME}/tmp/mpd-covers)"
cover_lock="${pics}/notify.lock"
magic_pie='8143'
mpd_music_dir="$(awk '/music_directory/{print $2}' ${XDG_CONFIG_HOME}/mpd/mpd.conf|tr -d '"'|sed 's:^~:'${HOME}':')"
track_path="$(mpc --format "$mpd_music_dir"/%file% | head -n 1)"
track_dir=$(dirname "$track_path")
prev_track_cover="${pics}/prev_track_cover.png"
track_cover="$track_dir/cover.jpg"

nr(){ print "<span weight='Bold' color='#b8c5d9'>$1</span>" }
fa(){ print "<span color=\'$1\' font-family = 'Font Awesome 6 Pro'>" }
E(){ print '</span>' }
cmp_img() { ${HOME}/bin/cmp-imgs.py "${1}" "${2}" }
prefix=(
    ''                        # track name    [1]
    "$(fa '#004E4E')   $(E)" # artist        [2]
    "$(fa '#004E4E')   $(E)" # album         [3]
    "$(fa '#004E4E')   $(E)" # label         [4]
    "$(fa '#004E4E')   $(E)" # audio_quality [5]
    "$(fa '#004E4E')   $(E)" # genre         [6]
    "$(fa '#004E4E')   $(E)" # quality       [7]
    "$(fa '#004E4E')   $(E)" # year          [8]
)

notify() {
    info=()
    track_metadata="$(sox --i "${track_path}" 2> /dev/null)"
    finger="$(awk -F '=' 'BEGIN{IGNORECASE=1}/(Artist|Album|Year)/{print $2}' <<< "$track_metadata")"
    info[1]=""
    info[2]="$(awk -F '=' 'BEGIN{IGNORECASE=1}/^artist=/{print $2}' <<< ${track_metadata})"
    info[3]="$(awk -F '=' 'BEGIN{IGNORECASE=1}/^album=/{print $2}' <<< ${track_metadata})"
    info[4]="$(awk -F '=' 'BEGIN{IGNORECASE=1}/^label=/{print $2}' <<< ${track_metadata})"
    info[5]="$(awk -F '=' 'BEGIN{IGNORECASE=1}/^year=/{print $2}' <<< ${track_metadata})"
    if [[ -z $info[5] ]]; then
        info[5]="$(awk -F '=' 'BEGIN{IGNORECASE=1}/^date=/{print $2}' <<< ${track_metadata})"
    fi
    info[6]="$(xargs <<< $(awk -F '=' 'BEGIN{IGNORECASE=1}/^genre=/{print $2}' <<< ${track_metadata}))"

    for i in {2..6}; do
        if [[ ! -z "${info[i]}" ]]; then
            info[i]="${prefix[i]}$(nr ${info[i]})\n"
        else
            info[i]="\n"
        fi
    done
    audio_quality="$(awk -F '\\s*:\\s*' \
        'BEGIN {} /^Channels/{ch=$2} \
        /^Sample Encoding/{se=$2} \
        /^Bit Rate/{br=$2} \
        /^Sample Rate/{sr=$2/1000} \
        /^Precision/{pr=$2} \
    END { \
    if (se ~ /FLAC/) printf "FLAC·"; \
    if (se ~ /MPEG/) printf "mpeg·"; \
    if (se ~ /Direct Stream Digital/) printf "dsd·"; \
        print br"·"sr"K/"pr"·"ch}' <<< ${track_metadata})"
    [[ ${audio_quality// } != "·K/·" ]] && info[7]="${prefix[7]}$(nr ${audio_quality})\n" || info[7]="\n"

    for i in ${info[@]};
        [[ ${i} != "\n" ]] && output="${output}${i}"
    output="\n${output}\n​"

    if [[ -e "$track_cover" ]]; then
        dunstify -p -a "mpd" -h "string:fgcolor:#17272D" \
            -u "normal" \
            -i "${track_cover}" "" "${output}" > /tmp/notify_id \
            -r ${magic_pie}
        echo -n "${finger}" > "${cover_lock}"
    fi
}

show_notify() {
    if [[ ! -e "${cover_lock}" ]]; then
        notify
    elif [[ -s "${cover_lock}" ]]; then
        if [[ "$(< "${cover_lock}")" != "$(sed '1d' <<< $(echo -n "${body}"))" ]]; then
            notify
        fi
    fi
    cp "${track_cover}" "${prev_track_cover}"
}

zshexit() {
    (
        if [[ -e "$track_cover" ]]; then
            hashsum1=$(xxh32sum "${track_cover}"|cut -d ' ' -f1)
            sleep 4s
            hashsum2=$(xxh32sum "${track_cover}"|cut -d ' ' -f1)
            [[ ${hashsum1} = ${hashsum2} ]] && rm -f ${track_cover}
        fi
    ) &
}

extract_and_dump_cover_if_none(){
    if [[ ! -e ${track_cover} ]]; then
        ffmpeg -y -i "$(mpc --format "$mpd_music_dir"/%file% | head -n 1)" "${track_cover}" > /dev/null 2>&1
    fi
}

main(){
    if [[ -e  /tmp/notify_id ]]; then
        dunstify -C "$(< /tmp/notify_id)" -r ${magic_pie}
    fi

    extract_and_dump_cover_if_none

    [[ ! -d "${pics}" ]] && mkdir -p "${pics}"
    fd prev_track_cover.png --changed-before '12min' -x rm '{}'
    if [[ -e ${track_cover} ]]; then
        show_notify
        [[ ! -d "${pics}" ]] && mkdir -p "${pics}"
        # send notification with compatible track_cover
        if [[ ! -e "${prev_track_cover}" ]]; then
            show_notify
        else
            local picslist=$(setopt nullglob dotglob; print "${pics}"/*)
            if cmp_img "${track_cover}" "${prev_track_cover}" \
                && (( ${#picslist[@]} > 1 )); then
                show_notify
            fi
        fi
    fi
}

main "$@" &!
