{
  "if": {
    "prefix": "if",
    "description": "if ... then ... else ...",
    "body": [
      "if ${1:condition}",
      "\tthen ${2:expression}",
      "\telse ${3:expression}"
    ],
    "luasnip": {
      "priority": -50
    }
  },
  "case": {
    "prefix": "case",
    "description": "case ... of ...",
    "body": [
      "case ${1:expression} of",
      "\t${2:pattern} -> ${3:expression}",
      "\t${4:pattern} -> ${5:expression}"
    ]
  },
  "::": {
    "prefix": "::",
    "description": "Type signature",
    "body": "${1:name} :: ${2:Type} -> ${3:Type}"
  },
  "=>": {
    "prefix": "=>",
    "description": "Type constraint",
    "body": "(${1:Class} ${2:Type var}) => ${3:$2}"
  },
  "def": {
    "prefix": "def",
    "description": "Function definition",
    "body": "${1:name} :: ${2:Type} -> ${3:Type}"
  },
  "def[]": {
    "prefix": "def[]",
    "description": "Function definition for list patterns",
    "body": [
      "${1:name} :: [${2:Type}] -> ${3:Type}",
      "$1 [] = ${4:undefined}",
      "$1 ${5:(x:xs)} = ${6:undefined}"
    ]
  },
  "=": {
    "prefix": "=",
    "description": "Function clause",
    "body": "${1:name} ${2:pattern} = ${3:undefined}"
  },
  "2=": {
    "prefix": "2=",
    "description": "Function clause",
    "body": [
      "${1:name} ${2:pattern} = ${3:undefined}",
      "$1 ${4:pattern} = ${5:undefined}"
    ]
  },
  "3=": {
    "prefix": "3=",
    "description": "Function clause",
    "body": [
      "${1:name} ${2:pattern} = ${3:undefined}",
      "$1 ${4:pattern} = ${5:undefined}",
      "$1 ${6:pattern} = ${7:undefined}"
    ]
  },
  "|": {
    "prefix": "|",
    "description": "Guard",
    "body": "| ${1:predicate} = ${2:undefined}"
  },
  "\\": {
    "prefix": "\\",
    "description": "Lambda expression",
    "body": "\\ ${1:pattern} -> ${2:expression}"
  },
  "[|]": {
    "prefix": "[|]",
    "description": "List comprehension",
    "body": "[${3:foo }$1 | ${1:x} <- ${2:xs} ]"
  },
  "let": {
    "prefix": "let",
    "description": "let ... in ...",
    "body": [
      "let ${1:name} = ${2:expression}",
      "in ${3:expression}"
    ]
  },
  "wh": {
    "prefix": "wh",
    "description": "where x = expression",
    "body": [
      "where",
      "\t${1:name} = ${2:expression}"
    ]
  }
}
