{
  "hfun": {
    "prefix": "hfun",
    "description": "header func",
    "body": "${1:void} ${3:Func}($4);"
  },
  "fori": {
    "prefix": "fori",
    "description": "for int loop (fori)",
    "body": [
      "for ( ${4:int} ${2:i} = 0; $2 < ${1:count}; ${3:++$2} ) {",
      "\t${0:/* code */}",
      "\\}"
    ]
  },
  "ss": {
    "prefix": "ss",
    "description": "std::string",
    "body": "std::string $0"
  },
  "ssr": {
    "prefix": "ssr",
    "description": "std::string",
    "body": "const std::string &$0"
  },
  "sv": {
    "prefix": "sv",
    "description": "std::vector",
    "body": "std::vector< ${1:std::string} > $2"
  },
  "svr": {
    "prefix": "svr",
    "description": "std::vector",
    "body": "const std::vector< ${1:std::string} > &$2"
  },
  "readfile": {
    "prefix": "readfile",
    "description": "read file (readF)",
    "body": [
      "std::vector<char> v;",
      "if (FILE *fp = fopen(${1:\"filename\"}, \"r\")) {",
      "\tchar buf[1024];",
      "\twhile(size_t len = fread(buf, 1, sizeof(buf), fp))",
      "\t\tv.insert(v.end(), buf, buf + len);",
      "\tfclose(fp);",
      "\\}"
    ]
  },
  "map": {
    "prefix": "map",
    "description": "std::map (map)",
    "body": "std::map<${1:key}, ${2:value}> map$0;"
  },
  "tp": {
    "prefix": "tp",
    "description": "template <typename ..> (template)",
    "body": "template <typename ${1:_InputIter}>"
  }
}
