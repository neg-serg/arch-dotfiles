priority -50

extends sh

priority -49

endsnippet

snippet !env "#!/usr/bin/env (!env)" b
#!/usr/bin/env zsh

endsnippet

# Global ==================================================================={{{
global !p

# e.g.:    ${1:e}`!p snip.rv = complete(t[5], ['endif', 'else', 'elseif'])`
def complete(t, opts):
  if t:
    opts = [ m[len(t):] for m in opts if m.startswith(t) ]
  if len(opts) == 1:
    return opts[0]
  return '(' + '|'.join(opts) + ')'

def fill_till(snip):
  line=snip.buffer[snip.line - 1]
  snip.rv = line.find('&') * ' '

endglobal
#===========================================================================}}}

snippet title "Title transformation"
${1:a text}
${1/\w+\s*/\u$0/}
endsnippet

snippet "#!" "shebang" "True" reA
#!/${1:bin/sh}`!p complete(t[1], ['usr/bin/env', 'bin/sh', 'usr/bin', 'usr/local/bin'])`
endsnippet

snippet "^fu" "function" rbA
function ${1:name} () {
$2
}
endsnippet

snippet "(el)?if" "if [[]]" rb
`!p if match.group(1):
    snip.rv=match.group(1)
`if [[ ${1:expr} ]]; then
    ${2:print "$3"}
${4:fi}`!p snip.rv = complete(t[4], ['fi', 'elif'])`
endsnippet

snippet && "[[ expr ]] && true"
[[ ${1:expr} ]] && ${2:true} ${3:\
`!p fill_till(snip)`|| ${4:false}}
endsnippet

snippet ifm "if =~ " b
if [[ $${1:var} =~ '${2:re}' ]]; then
    ${3:print "${4:match}"}
fi
endsnippet

snippet ~ " =~ " i
$${1:var} =~ '${2:re}'
endsnippet

snippet $ "$VAR" i
$${1:{VAR}}
endsnippet

snippet @ "${@}" i
${@:${1:1}}
endsnippet

# vim:ft=snippets:
