priority -50

extends c

# We want to overwrite everything in parent ft.
priority -49

snippet mfun "member func"
${1:void} ${2:`!p snip.rv = snip.basename`}::${3:Func}($4) {
	$0
}
endsnippet

snippet hfun "header func"
${1:void} ${3:Func}($4);
endsnippet

snippet fori "for int loop (fori)"
for ( ${4:int} ${2:i} = 0; $2 < ${1:count}; ${3:++$2} ) {
	${0:/* code */}
}
endsnippet

snippet ss "std::string"
std::string $0
endsnippet

snippet ssr "std::string"
const std::string &$0
endsnippet

snippet sv "std::vector"
std::vector< ${1:std::string} > $2
endsnippet

snippet svr "std::vector"
const std::vector< ${1:std::string} > &$2
endsnippet

snippet bn "$1.begin(), $1.end() (beginend)"
${1:v}${1/^.*?(-)?(>)?$/(?2::(?1:>:.))/}begin(), $1${1/^.*?(-)?(>)?$/(?2::(?1:>:.))/}end()
endsnippet

snippet cl "class .. (class)"
class ${1:`!p snip.rv = snip.basename or "name"`} {
public:
	${1/(\w+).*/$1/} (${2:arguments});
	virtual ~${1/(\w+).*/$1/} ();

private:
	${0:/* data */}
};
endsnippet

snippet ns "namespace .. (namespace)"
namespace${1/.+/ /m}${1:`!p snip.rv = snip.basename or "name"`} {
	${VISUAL}${0}
}${1/.+/ \/* /m}$1${1/.+/ *\/ /m}
endsnippet

snippet readfile "read file (readF)"
std::vector<char> v;
if (FILE *fp = fopen(${1:"filename"}, "r")) {
	char buf[1024];
	while(size_t len = fread(buf, 1, sizeof(buf), fp))
		v.insert(v.end(), buf, buf + len);
	fclose(fp);
}
endsnippet

snippet map "std::map (map)"
std::map<${1:key}, ${2:value}> map$0;
endsnippet

snippet tp "template <typename ..> (template)"
template <typename ${1:_InputIter}>
endsnippet

# vim:ft=snippets:
