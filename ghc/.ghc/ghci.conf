-- import qualified Control.Applicative
-- import qualified Data.Char
-- import qualified Data.List

let escape arg = "'" ++ ((\c -> if c == '\'' then "'\"'\"'" else [c]) =<< arg) ++"'"
:def! search return . (":!hoogle --count=50 --color " ++) . escape
:def! doc return . (":!hoogle --count=50 --color --info " ++) . escape
-- :set prompt "\ESC[0;34m[\ESC[1;37mλ\ESC[0;34m] \ESC[1;37m%s\ESC[m\STX >> "
:set prompt "\ESC[0;34m[\ESC[1;37mλ\ESC[0;34m]\ESC[1;37m\ESC[m\STX >> "
:set +t
-- :set -Wall
