#-------~---~----------~----------~----
#       .---..-.-.-..-..-..-..-.
#       `| |'| | | || || | >  <
#        `-' `-'-'-'`----''-''-'
#-------~---~----------~----------~----

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-fingers'
set -g @plugin 'tmux-plugins/tmux-yank'

run '~/.tmux/plugins/tpm/tpm'

set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-save 'S'
set -g @prefix_highlight_bg 'colour62'
set -g @fingers-key F

set -g default-terminal "tmux-256color"

# environment
set -g update-environment "DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY ST_TERM"

# vim-like keybindings
set-window-option -g mode-keys vi

# fix for terminal-notifier
set-option -g default-command "reattach-to-user-namespace -l zsh"

# better mode-style
set -wg mode-style bg=colour17,fg=colour14

# don't wait for an escape sequence after hitting
# Esc. fixes insert mode exit lag in vim
set -sg escape-time 1

# send the prefix to client inside window (ala nested sessions)
bind-key C-a send-prefix

set-window-option -g aggressive-resize on

set -g prefix ^s
bind-key C-s last-window

# Mouse support.
# mode-mouse: on allows scrolling, but requires Shift for X-selection (copy-mode does not).
set-option -g -q mouse off

set -g history-limit 131072

# for vim-alt(fixkey) keys compatibility
# try not to use it to prevent disconnect
set -g xterm-keys on

set -g default-shell /bin/zsh
set -g default-command /bin/zsh

# Change cursor in vim to distinguish between insert and command mode
# Use in conjunction with tmux-cursors.vim
set-option -g terminal-overrides '*88col*:colors=88,*256col*:colors=256,xterm*:XT:Ms=\E]52;%p1%s;%p2%s\007:Cc=\E]12;%p1%s\007:Cr=\E]112\007:Cs=\E]50;CursorShape=%?%p1%{3}%<%t%{0}%e%p1%{2}%-%;%d\007'
set -ga terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

# Sane scrolling
set -ga terminal-overrides 'xterm*:smcup@:rmcup@'

# 24-bit color support
set -ga terminal-overrides ',xterm-256color:Tc'

# Thanks to: https://sunaku.github.io
# enable 24-bit true color RGB escape sequences under st
# https://sunaku.github.io/tmux-24bit-color.html
set-option -ga terminal-overrides ',st-256color:Tc'

# Thanks to: https://sunaku.github.io
# allow set-titles to change the window title under XTerm
# http://opennomad.com/content/goodbye-screen-hello-tmux
set-option -ga terminal-overrides ',xterm*:XT'

# Thanks to: https://sunaku.github.io
# allow set-titles to change the window title under XTerm
# http://opennomad.com/content/goodbye-screen-hello-tmux
# http://stackoverflow.com/questions/15195624
set-option -ga terminal-overrides ',st-256color:smkx=\E='

# Thanks to: https://sunaku.github.io
# yank to system clipboard rather than primary selection
# http://invisible-island.net/xterm/terminfo-contents.html#tic-xterm_tmux
set-option -ga terminal-overrides ',xterm*:Ms=\E]52;c;%p2%s\007'

# Thanks to: https://sunaku.github.io
# prevent standout from appearing as italics under URxvt
# http://comments.gmane.org/gmane.comp.terminal-emulators.tmux.user/1927
set-option -ga terminal-overrides ',rxvt-unicode*:sitm@'

# Use new tmux-256color terminfo, also provided in ~/.dotfiles/terminfo (via FAQ).
if-shell '[ "$TERM" = "linux" ]' '' 'set -g default-terminal "tmux-256color"'
if "[[ ${TERM} =~ 256color || ${TERM} == fbterm ]]" 'set -g default-terminal tmux-256color'

# Setup defaults from xterm* also for urxvt (minus Ms for set-selection).
# Asked about this on the mailing list (rejected): https://sourceforge.net/p/tmux/mailman/message/33169870/
set -ga terminal-overrides ",rxvt*:XT:Cs=\\E]12;%p1%s\\007:Cr=\\E]112\\007:Ss=\\E[%p1%d q:Se=\\E[2 q"

# Toggle mouse mode.
bind m set-option -g -q mouse on \;\
    display 'Mouse: ON'
bind M set-option -g -q mouse off \;\
    display 'Mouse: OFF'

# create pane (below, above, left, right)
bind-key -n M-c split-window -c '#{pane_current_path}'
bind-key -n M-C-c split-window -c '#{pane_current_path}' -b
bind-key -n M-C-r split-window -c '#{pane_current_path}' -b -h
bind-key -n M-r split-window -c '#{pane_current_path}'    -h

# join pane (above, left, below, right)
bind-key C-g move-pane    -t .-1 -s .    # join pane at bottom of prev pane
bind-key C-l move-pane    -t .-1 -s . -h # join pane at right of prev pane
bind-key C-G move-pane -d -s .+1 -t .    # join next pane at bottom
bind-key C-L move-pane -d -s .+1 -t . -h # join next pane at right

# attach by number
bind-key 'M-1' join-pane -t :1
bind-key 'M-2' join-pane -t :2
bind-key 'M-3' join-pane -t :3
bind-key 'M-4' join-pane -t :4
bind-key 'M-5' run-shell 'tmux select-window -t :1 \;\
                                  select-window -t :-1 \;\
                                  join-pane -s "#{pane_id}"'
bind-key 'M-9' choose-window 'join-pane -t "%%"'

# transfer most-recently copied text to attached terminal with yank:
# https://github.com/sunaku/home/blob/master/bin/yank
bind-key M-y run-shell 'tmux save-buffer - | yank > #{pane_tty}'

# https://groups.google.com/d/msg/tmux-users/XTrSVUR15Zk/3iyJLMyQ7PwJ
bind-key -T root WheelUpPane \
  if-shell -Ft= '#{mouse_any_flag}' 'send-keys -M' \
  'if-shell -Ft= "#{pane_in_mode}" "send-keys -M" "copy-mode"'
bind-key -T root WheelDownPane \
  if-shell -Ft= '#{mouse_any_flag}' 'send-keys -M' \
  'if-shell -Ft= "#{pane_in_mode}" "send-keys -M"'

# search buffer using copy mode
bind-key -n M-/ copy-mode \; send-keys ?

# zoom pane
bind-key -n M-m resize-pane -Z

# scroll buffer
# NOTE: set "URxvt.saveLines: 0" in ~/.Xdefaults to make Shift+PageUp bindable
# NOTE: see http://aperiodic.net/screen/interface for doing the same in XTerm
bind-key -n S-PPage copy-mode -u

#--Paste'n'copy
bind p paste-buffer
bind-key -T copy-mode-vi 'C-v' send -X rectangle-toggle
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection -x
bind-key -T copy-mode-vi 'Escape' send -X cancel
bind-key -T copy-mode-vi 'C-c' send -X cancel
bind-key -T copy-mode-vi 'V' send -X select-line
bind-key -T copy-mode-vi 'r' send -X rectangle-toggle
# transfer copied text to attached terminal with yank:
# https://github.com/sunaku/home/blob/master/bin/yank
bind-key -T copy-mode-vi 'Y' send -X copy-pipe 'yank > #{pane_tty}'
# open the visual selection with xdg-open(1)
bind-key -T copy-mode-vi 'O' send -X copy-pipe 'xargs xdg-open'

# half-screen tiling layouts (horizontal, vertical)
# https://sunaku.github.io/tmux-half-screen-tiling-layouts.html
bind-key C-W select-layout main-horizontal \;\
  run-shell 'tmux resize-pane -t 1 -y $(( #{window_height} / 2 ))'
bind-key C-V select-layout main-vertical   \;\
  run-shell 'tmux resize-pane -t 1 -x $(( #{window_width}  / 2 ))'

bind-key < command-prompt -p "send to tmux:" "run-shell 'tmux set-buffer -- \"$(xsel -o -b)\"'"
bind-key > command-prompt -p "send to xsel:" "run-shell 'tmux show-buffer | xsel -i -b'"

run-shell ~/.tmux/tmux-resurrect/resurrect.tmux
set -g @resurrect-capture-pane-contents 'on'

bind -n M-n new-window

unbind [
bind Tab copy-mode
# toggle last window like screen
bind-key k kill-window
# confirm before killing the server
bind-key K confirm kill-server
# ctrl+left/right cycles thru windows
bind-key -n C-right next
bind-key -n C-left prev
# listen for activity on all windows
set -g bell-action any
# on-screen time for display-panes in ms
set -g display-panes-time 2000
# start window indexing at one instead of zero
set -g base-index 1
# border colours
set -g pane-border-fg blue
set -g pane-active-border-bg default
# wm window title string (uses statusbar variables)
set -g set-titles on
set-option -g set-titles-string 'tmux:#I [ #W #T ]'
# set -g set-titles-string "#T : #h > #S > #W"

# enable wm window titles
setw -g automatic-rename yes
set-option -g visual-activity on
set -g status-keys vi

set -g message-fg white
set -g message-bg black
set -g message-attr bright

bind space command-prompt -p index "select-window"

bind a choose-session

unbind b
unbind B

bind | split-window -h
bind _ split-window -v
bind R source-file ~/.tmux.conf \; display-message "  Config reloaded..".

# Copy into clipboard
bind C-c choose-buffer -O name "run \"tmux save-buffer -b '%%' - | xsel -i -b\""

bind -r h resize-pane -L 1
bind -r j resize-pane -D 1
bind -r k resize-pane -U 1
bind -r l resize-pane -R 1

bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

bind -n M-C-w if-shell 'test `~/bin/scripts/not_tmuxed_wim` == "TRUE"' kill-pane

bind X next-layout
bind Z previous-layout

bind-key n run-shell "tmux rename-session $(basename $(git rev-parse --show-toplevel))"

bind-key U capture-pane \; save-buffer /tmp/tmux-buffer \; \
        new-window -n "urlscan" '$SHELL -c "urlscan -c < /tmp/tmux-buffer"'

# swap pane
bind-key M-C-- swap-pane -D
bind-key M-C-_ swap-pane -U

# Smart pane switching with awareness of Vim splits. - Thanks CHRIS TOOMEY!
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind -n C-M-h run "(is_vim && tmux send-keys C-M-h) || tmux select-pane -L"
bind -n C-M-j run "(is_vim && tmux send-keys C-M-j) || tmux select-pane -D"
bind -n C-M-k run "(is_vim && tmux send-keys C-M-k) || tmux select-pane -U"
bind -n C-M-l run "(is_vim && tmux send-keys C-M-l) || tmux select-pane -R"

# set -g status-justify centre # center align window list
set -g status-justify left # center align window list
source /usr/lib/python3.6/site-packages/powerline/bindings/tmux/powerline.conf

set -g status-left "#{prefix_highlight}"
if-shell 'test `~/bin/scripts/not_tmuxed_wim` == "TRUE"' 'source-file ~/.tmux/layout-dwindle.tmux'
if-shell 'test `~/bin/scripts/not_tmuxed_wim` == "TRUE"' 'source-file ~/.tmux/tmux_jumps.tmux'
if-shell 'test `~/bin/scripts/not_tmuxed_wim` == "TRUE"' 'run-shell ~/.tmux/tmux-open/open.tmux'
