#-------~---~----------~----------~----
#       .---..-.-.-..-..-..-..-.
#       `| |'| | | || || | >  <
#        `-' `-'-'-'`----''-''-'
#-------~---~----------~----------~----

# Plugin settings
unbind-key -T copy-mode C-s
unbind-key -T copy-mode y
unbind -T prefix C-s
unbind C-s
set -g prefix ^s
set -g @resurrect-save 'S'

setw -gq utf8 on

set -g @resurrect-capture-pane-contents 'on'
set -g @prefix_highlight_bg 'colour62'
set -g @fingers-hint-position 'right'
set -g @fingers-compact-hints 0
set -g @fingers-hint-format-nocompact "#[fg=cyan,bold][%s]"
set -g @fingers-highlight-format-nocompact "#[fg=cyan,dim]%s"
set -g @fingers-copy-command-uppercase 'xsel -i'
set -g @extrakto_key 'q'

# for tmux-yank
set -g set-clipboard on
set -g @yank_selection 'primary' # or 'secondary' or 'clipboard'

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'Morantron/tmux-fingers'
set -g @plugin 'laktak/extrakto'

run '~/.tmux/plugins/tpm/tpm'

# environment
set -g update-environment "DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY"

# vim-like keybindings
set-window-option -g mode-keys vi

# fix for terminal-notifier
set-option -g default-command "reattach-to-user-namespace -l zsh"

# better mode-style
set -wg mode-style bg=colour17,fg=colour14

# don't wait for an escape sequence after hitting
# Esc. fixes insert mode exit lag in vim
set -sg escape-time 1

# send the prefix to client inside window (ala nested sessions)
bind-key C-a send-prefix

set-window-option -g aggressive-resize on

bind-key C-s last-window

set -g history-limit 131072

# for vim-alt(fixkey) keys compatibility
# try not to use it to prevent disconnect
set -g xterm-keys on
set -s focus-events on

set -g default-shell /bin/zsh
set -g default-command /bin/zsh

# Change cursor in vim to distinguish between insert and command mode
# Use in conjunction with tmux-cursors.vim
set-option -g terminal-overrides '*88col*:colors=88,*256col*:colors=256,xterm*:XT:Ms=\E]52;%p1%s;%p2%s\007:Cc=\E]12;%p1%s\007:Cr=\E]112\007:Cs=\E]50;CursorShape=%?%p1%{3}%<%t%{0}%e%p1%{2}%-%;%d\007'
set -ga terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

# tmux-256color by default
set -g default-terminal "tmux-256color"

# 24-bit color support
set-option -ga terminal-overrides ",tmux*:Tc"
set-option -ga terminal-overrides ",alacritty*:Tc"
set-option -ga terminal-overrides ",st*:Tc"

# listen for activity on all windows
set -g bell-action any
# on-screen time for display-panes in ms
set -g display-panes-time 2000
# start window indexing at one instead of zero
set -g base-index 1
# border colours
set -g pane-border-style fg=blue,bg=default
# wm window title string (uses statusbar variables)
set -g set-titles on
set-option -g set-titles-string '⟬ #S:[#I:#W] | #T⟭'

# enable wm window titles
setw -g automatic-rename yes
set-option -g visual-activity on
set -g status-keys vi

set -g message-style fg=white,bg=black

# create pane (below, above, left, right)
bind-key -n M-c split-window -c '#{pane_current_path}'
bind-key -n M-C-c split-window -c '#{pane_current_path}' -b
bind-key -n M-C-j split-window -c '#{pane_current_path}' -b -h
bind-key -n M-j split-window -c '#{pane_current_path}'    -h

# Mouse support.
# mode-mouse: on allows scrolling, but requires Shift for X-selection (copy-mode does not).
set-option -g -q mouse off

# zoom pane
bind-key -n M-m resize-pane -Z

#--Paste'n'copy
bind p paste-buffer
bind-key -T copy-mode-vi 'C-v' send -X rectangle-toggle
bind-key -T copy-mode-vi 'Escape' send -X cancel
bind-key -T copy-mode-vi 'C-c' send -X cancel
bind-key -T copy-mode-vi 'V' send -X select-line
bind-key -T copy-mode-vi 'r' send -X rectangle-toggle

bind-key < command-prompt -p "send to tmux:" "run-shell 'tmux set-buffer -- \"$(xsel -o -b)\"'"
bind-key > command-prompt -p "send to xsel:" "run-shell 'tmux show-buffer | xsel -i -b'"

bind -n M-n new-window
bind -n M-/ run-shell "/home/neg/.tmux/plugins/tmux-fingers/scripts/tmux-fingers.sh"

unbind [
bind Tab copy-mode

# ctrl+left/right cycles thru windows
bind-key -n C-right next
bind-key -n C-left prev
bind space command-prompt -p index "select-window"

bind a choose-session

unbind b
unbind B

bind | split-window -h
bind _ split-window -v
bind R source-file ~/.tmux.conf \; display-message "  Config reloaded..".

# Copy into clipboard
bind C-c choose-buffer -O name "run \"tmux save-buffer -b '%%' - | xsel -i -b\"" \; send-keys up

bind -r h resize-pane -L 1
bind -r j resize-pane -D 1
bind -r k resize-pane -U 1
bind -r l resize-pane -R 1

bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

bind X next-layout
bind Z previous-layout

# Smart pane switching with awareness of Vim splits. - Thanks CHRIS TOOMEY!
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind -n M-C-w if "! $is_vim" "kill-pane"
bind -n C-M-h if "$is_vim" "send-keys C-M-h"  "select-pane -L"
bind -n C-M-j if "$is_vim" "send-keys C-M-j"  "select-pane -D"
bind -n C-M-k if "$is_vim" "send-keys C-M-k"  "select-pane -U"
bind -n C-M-l if "$is_vim" "send-keys C-M-l"  "select-pane -R"
if "$is_vim" "tmux source-file ~/.tmux/tmux_jumps.tmux"

run-shell ~/.tmux/tmux-resurrect/resurrect.tmux
set -g @resurrect-capture-pane-contents 'on'

set -g status-justify left # center align window list

set -g status on
set -g status-interval 60
set -g status-left ""

set-option -g status-position bottom

set-option -g status-style fg=white,bg=default,default
set -g window-status-format "#[fg=#303030] #I#F #[fg=colour232]❯> #[fg=#242424]#W\ \ "
set -g window-status-current-format " #I#{?window_flags,#F, } #[fg=colour24]❯> #[fg=default]#W\ \ "

set-option -qg status-style "fg=#899CA1"
set-window-option -qg window-status-style "fg=#617287"
set-window-option -qg window-status-activity-style "fg=#ff5858"
set-window-option -qg window-status-bell-style "fg=#ff00ff"

set -g status-right-length 150
set-option -g status-right '#[fg=white]#(~/.tmux/bin/tmux_statusline)'
