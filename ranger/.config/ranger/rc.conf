set viewmode miller

# How many columns are there, and what are their relative widths?
set column_ratios 1,2
set hidden_filter ^\.|\.(?:pyc|pyo|bak|swp)$|^lost\+found$|^__(py)?cache__$
set show_hidden true
set confirm_on_delete multiple
set preview_script ~/.config/ranger/scope.sh
set use_preview_script true
set automatically_count_files true
set open_all_images true

set vcs_aware false
set vcs_backend_git enabled
set vcs_backend_hg enabled
set vcs_backend_bzr enabled

set preview_images true
set preview_images_method ueberzug

set unicode_ellipsis true

set show_hidden_bookmarks true

set colorscheme default
set preview_files true
set preview_directories true
set collapse_preview true

set save_console_history true
set status_bar_on_top false
set draw_progress_bar_in_status_bar true

set draw_borders false
set dirname_in_tabs false
set mouse_enabled true

set display_size_in_main_column true
set display_size_in_status_bar true

set display_tags_in_all_columns true
set update_title false
set update_tmux_title false
set shorten_title 3

set hostname_in_titlebar false
set tilde_in_titlebar true

set max_history_size 20
set max_console_history_size 50

set scroll_offset 8

set flushinput true

set padding_right true
set autosave_bookmarks true
set autoupdate_cumulative_size false
set show_cursor false

set sort natural
set sort_reverse false
set sort_case_insensitive true
set sort_directories_first true
set sort_unicode false

set xterm_alt_key false
set cd_bookmarks true
set preview_max_size 0
set show_selection_in_titlebar true
set idle_delay 2000
set metadata_deep_search false

alias e    edit
alias q    quit
alias q!   quitall
alias qa   quitall
alias qall quitall
alias setl setlocal

alias filter     scout -prt
alias find       scout -aeit
alias mark       scout -mr
alias unmark     scout -Mr
alias search     scout -rs
alias search_inc scout -rts
alias travel     scout -aefiklst

cmap <tab>   eval fm.ui.console.tab()
cmap <s-tab> eval fm.ui.console.tab(-1)
cmap <C-g>   eval fm.ui.console.close()
cmap <CR>    eval fm.ui.console.execute()
cmap <C-l>   redraw_window

copycmap <CR>  <C-j>

cmap <A-d>        eval fm.ui.console.delete_word(backward=False)
cmap <a-left>   eval fm.ui.console.move_word(left=1)
cmap <a-right>  eval fm.ui.console.move_word(right=1)
cmap <C-l>   redraw_window
cmap <CR>    eval fm.ui.console.execute()
cmap <ESC>   eval fm.ui.console.close()
cmap <s-tab> eval fm.ui.console.tab(-1)
cmap <tab>   eval fm.ui.console.tab()

copycmap <CR>  <C-j>
copycmap <ESC> <C-c>
copymap m<bg>  um<bg> `<bg> '<bg>
copymap q ZZ ZQ
copypmap <C-g> q Q i <F3>
copypmap <DOWN>     <C-n> <CR>
copypmap <END>      <A-GT>
copypmap <HOME>     <A-LT>
copypmap <LEFT>     <C-b>
copypmap <PAGEDOWN> <C-F> <A-v> <Space>
copypmap <PAGEUP>   <C-B> <C-v>
copypmap <RIGHT>    <C-f>
copypmap <UP>       <C-p>
copytmap <ESC> q Q w <C-c>

map <UP> move up=1
tmap <ESC> taskview_close
map <PAGEDOWN> move down=1   pages=True
map <PAGEUP>   move up=1     pages=True
map <RIGHT>    move right=1
map <INSERT>   console touch%space
map <LEFT>     move left=1
map <HOME>     move to=0
map <END>      move to=-1
map <DOWN>     move down=1

default_linemode devicons
# == Define keys for the console
# eject a CD-ROM/DVD 
eval for arg in "rwxXst": cmd("map +{0}  shell -f chmod u+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -{0}  shell -f chmod u-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map +a{0} shell -f chmod a+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -a{0} shell -f chmod a-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map +g{0} shell -f chmod g+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -g{0} shell -f chmod g-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map +o{0} shell -f chmod o+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -o{0} shell -f chmod o-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map +u{0} shell -f chmod u+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -u{0} shell -f chmod u-{0} %s".format(arg))

map '<any>  enter_bookmark %any
map `<any>  enter_bookmark %any

map a  rename_append
map <C-c> abort
map cd console cd%space
map =  chmod
map <C-h> set show_hidden!
map <C-l> redraw_window
map /  console search%space
map #  console shell -p%space
map <CR>       move right=1
map <C-r> reset
map cw console rename%space

map dD console delete
map dG  eval fm.cut(dirarg=dict(to=-1), narg=quantifier)
map dgg eval fm.cut(dirarg=dict(to=0), narg=quantifier)
map dj  eval fm.cut(dirarg=dict(down=1), narg=quantifier)
map dk  eval fm.cut(dirarg=dict(up=1), narg=quantifier)
map dt cut mode=toggle

map ej shell -d eject
map <esc> change_mode normal

map f  console find%space

map g/ cd /
map g? cd /usr/share/doc/ranger
map gR eval fm.cd(ranger.RANGERDIR)

map I  eval fm.open_console('rename ' + fm.thisfile.relative_path.replace("%", "%%"), position=7)

map m<any>  set_bookmark %any
map m<bg>   draw_bookmarks

map Mf linemode filename
map Mi linemode fileinfo
map Mm linemode mtime
map Mp linemode permissions
map Ms linemode sizemtime
map Mt linemode metatitle

map oe chain set sort=extension; set sort_reverse=False
map oE chain set sort=extension; set sort_reverse=True

map or set sort_reverse!
map or toggle_option sort_reverse
map oz set sort=random

map pO paste overwrite=True append=True
map pP paste append=True

map q quit
map Q quit!

map r  chain draw_possible_programs; console open_with%%space

map R  reload_cwd
map s  console shell%space

map ~ set viewmode!

map um<any> unset_bookmark %any

map un shell -d udiskie-umount %d/%f

map yd shell -d echo -n %d    | xsel -i
map yd shell -f echo -n %d    | xsel -i; xsel -o | xsel -i -b

map yG  eval fm.copy(dirarg=dict(to=-1), narg=quantifier)
map ygg eval fm.copy(dirarg=dict(to=0), narg=quantifier)
map yj  eval fm.copy(dirarg=dict(down=1), narg=quantifier)
map yk  eval fm.copy(dirarg=dict(up=1), narg=quantifier)

map yn shell -d echo -n %f    | xsel -i
map yn shell -f echo -n %f    | xsel -i; xsel -o | xsel -i -b
map yp shell -d echo -n %d/%f | xsel -i
map yp shell -f echo -n %d/%f | xsel -i; xsel -o | xsel -i -b

map yt copy mode=toggle

map zc set collapse_preview!
map zd set sort_directories_first!
map zf console filter%space
map zh set show_hidden!
map zI set flushinput!
map zi set preview_images!
map zm set mouse_enabled!
map zP set preview_directories!
map zp set preview_files!
map zs set sort_case_insensitive!
map zu set autoupdate_cumulative_size!
map zv set use_preview_script!

pmap <C-d> pager_move  down=0.5  pages=True
pmap <C-g> pager_close
pmap <C-u> pager_move  up=0.5    pages=True

tmap <A-n> eval -q fm.ui.taskview.task_move(-1)
tmap <A-p> eval -q fm.ui.taskview.task_move(0)
tmap <C-d> eval -q fm.ui.taskview.task_remove()
tmap <C-g> taskview_close

tmap dd eval -q fm.ui.taskview.task_remove()
tmap J eval -q fm.ui.taskview.task_move(-1)
tmap K eval -q fm.ui.taskview.task_move(0)
