#!/bin/zsh

pics="$(realpath ${HOME}/tmp/mpd-covers)"
cover_lock="${pics}/notify.lock"
image="/tmp/mpd_cover.jpg"
magic_pie='8143'
max_len=35
mpd_music_dir="$(awk '/music_directory/{print $2}' ${XDG_CONFIG_HOME}/mpd/mpd.conf|tr -d '"'|sed 's:^~:'${HOME}':')"

nr(){ print "<span weight='Bold' color='#b8c5d9'>$1</span>" }
fa(){ print "<span color=\'$1\' font-family = 'Font Awesome 6 Pro'>" }
E(){ print '</span>' }
cmp_img() { ${HOME}/bin/cmp-imgs.py "${1}" "${2}" }
prefix=(
    ''                        # track name    [1]
    "$(fa '#004E4E')   $(E)" # artist        [2]
    "$(fa '#004E4E')   $(E)" # album         [3]
    "$(fa '#004E4E')   $(E)" # ????          [4]
    "$(fa '#004E4E')   $(E)" # audio_quality [5]
    "$(fa '#004E4E')   $(E)" # label         [6]
    "$(fa '#004E4E')   $(E)" # year          [7]
)

notify() {
    info=()
    current_file="$(mpc -f '%file%'|head -1)"
    current_dirname="${mpd_music_dir}/$(dirname "${current_file}")"
    track_metadata="$(sox --i "${mpd_music_dir}/${current_file}" 2> /dev/null)"

    finger="$(awk -F '=' 'BEGIN{IGNORECASE=1}/(Artist|Album|Year)/{print $2}' <<< "$track_metadata")"

    info[1]=""
    info[2]="$(awk -F '=' 'BEGIN{IGNORECASE=1}/^ARTIST=/{print $2}' <<< ${track_metadata})"
    info[3]="$(awk -F '=' 'BEGIN{IGNORECASE=1}/^ALBUM=/{print $2}' <<< ${track_metadata})"
    info[4]="$(awk -F '=' 'BEGIN{IGNORECASE=1}/^LABEL=/{print $2}' <<< ${track_metadata})"
    info[5]="$(awk -F '=' 'BEGIN{IGNORECASE=1}/^YEAR=/{print $2}' <<< ${track_metadata})"

    for i in {2..5}; do
        if [[ ! -z "${info[i]}" ]]; then
            info[i]="${prefix[i]}$(nr ${info[i]})\n"
        else
            info[i]="\n"
        fi
    done

    audio_quality="$(awk -F '\\s*:\\s*' \
        'BEGIN {} /^Channels/{ch=$2} \
        /^Sample Encoding/{se=$2} \
        /^Bit Rate/{br=$2} \
        /^Sample Rate/{sr=$2/1000} \
        /^Precision/{pr=$2} \
    END { \
    if (se ~ /FLAC/) printf "FLAC·"; \
    if (se ~ /MPEG/) printf "mpeg·"; \
    if (se ~ /Direct Stream Digital/) printf "dsd·"; \
        print br"·"sr"K/"pr"·"ch}' <<< ${track_metadata})"

    [[ ${audio_quality// } != "·K/·" ]] && info[6]="${prefix[6]}$(nr ${audio_quality})\n" || info[6]="\n"
    [[ ! -z "${label// }" ]] && info[7]="${prefix[7]}$(nr ${label})\n" || info[7]="\n"
    [[ ! -z "${year// }" ]] && info[8]="${prefix[8]}$(nr ${year})\n" || info[8]="\n"

    for i in ${info[@]};
        [[ ${i} != "\n" ]] && output="${output}${i}"
    output="\n${output}\n​"

    dunstify -p -a "mpd" -h "string:fgcolor:#17272D" \
        -u "normal" \
        -i "${image}" "" "${output}" > /tmp/notify_id \
        -r ${magic_pie}
    echo -n "${finger}" > "${cover_lock}"
}

show_notify() {
    if [[ ! -f "${cover_lock}" ]]; then
        notify
    elif [[ -s "${cover_lock}" ]]; then
        if [[ "$(< "${cover_lock}")" != "$(sed '1d' <<< $(echo -n "${body}"))" ]]; then
            notify
        fi
    fi
    cp "${image}" "${prev}"
}

zshexit() {
    (
        hashsum1=$(xxh32sum "${image}"|cut -d ' ' -f1)
        sleep 4s
        hashsum2=$(xxh32sum "${image}"|cut -d ' ' -f1)
        [[ ${hashsum1} = ${hashsum2} ]] && rm -f ${image}
    ) &
}

dump_cover(){
    ffmpeg -y -i "$(mpc --format "$mpd_music_dir"/%file% | head -n 1)" "${image}" > /dev/null 2>&1
}

dunstify -C "$(< /tmp/notify_id)" -r ${magic_pie}

dump_cover

[[ ! -d "${pics}" ]] && mkdir -p "${pics}"
prev="${pics}/prev.png"
fd prev.png --changed-before '12min' -x rm '{}'
if [[ -f ${image} ]]; then
    show_notify
    [[ ! -d "${pics}" ]] && mkdir -p "${pics}"
    # send notification with compatible image
    if [[ ! -f "${prev}" ]]; then
        show_notify
    else
        local picslist=$(setopt nullglob dotglob; print "${pics}"/*)
        if [[ $(cmp_img "${image}" "${prev}") == "False" ]] \
            && (( ${#picslist[@]} > 1 )); then
            show_notify
        fi
    fi
fi
